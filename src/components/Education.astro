---
---

<div class="section-container education-section">
  <h3 class="section-category">Educación</h3>
  
  <div class="education-timeline">
    <div class="timeline-road">
      <div class="timeline-track"></div>
      <div class="timeline-milestones">
        <!-- Milestone 1: Preparatoria (Izquierda) -->
        <div class="milestone milestone-1">
          <div class="milestone-dot" data-index="0"></div>
          <div class="milestone-year">2020-2023</div>
        </div>
        
        <!-- Milestone 2: Universidad (Derecha) -->
        <div class="milestone milestone-2">
          <div class="milestone-dot" data-index="1"></div>
          <div class="milestone-year">2023-Presente</div>
        </div>
      </div>
    </div>
    
    <div class="education-cards">
      <!-- Preparatoria (Primer punto - izquierda) -->
      <div class="education-card left" data-year="2020">
        <div class="education-icon-container">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 640 512" class="education-icon">
            <path fill="currentColor" d="M344 24c0-13.3-10.7-24-24-24s-24 10.7-24 24V48H248c-13.3 0-24 10.7-24 24s10.7 24 24 24h48v49.8c-39.9 1.5-77.1 12.7-107.9 31.1c-8.3 5-11.1 15.6-6.1 24c5 8.3 15.6 11.1 24 6.1c27.1-16.3 59.1-26.1 93.4-26.1h29.1c70.4 0 132.2 49.4 147.2 118c15.6 71.4-20.3 140.7-83.5 169.3L327.3 503.8c-8.6 3.9-12.3 14-8.4 22.6c3.9 8.6 14 12.3 22.6 8.4l65-29.7c78.9-36 123.5-122.5 104.3-210.7C489.3 197.6 411.5 136 320 136V96h48c13.3 0 24-10.7 24-24s-10.7-24-24-24H320V24zM132.5 469.3l65 29.7c8.6 3.9 18.7 .1 22.6-8.4c3.9-8.6 .1-18.7-8.4-22.6l-64.9-29.7c-63.2-28.6-99.1-97.9-83.5-169.3c15-68.6 76.8-118 147.2-118h29.1c34.3 0 66.3 9.8 93.4 26.1c8.3 5 19 2.3 24-6.1c5-8.3 2.3-19-6.1-24C320.1 128.5 282.9 117.3 243 115.8V66h48c13.3 0 24-10.7 24-24s-10.7-24-24-24H243V24c0-13.3-10.7-24-24-24s-24 10.7-24 24V48H147c-13.3 0-24 10.7-24 24s10.7 24 24 24h48v40C104 136 26.2 197.6 4.7 294.4c-19.2 88.2 25.4 174.7 104.3 210.7l23.5 10.8z"/>
          </svg>
        </div>
        <div class="education-content">
          <span class="date">2020 - 2023</span>
          <h4 class="title">Especialidad en Electrónica</h4>
          <p class="institution">CBTis103</p>
          <p class="description">
            Formación técnica en electrónica con obtención de cédula profesional. 
            Aprendizaje de circuitos electrónicos, programación básica y sistemas digitales.
          </p>
          <div class="tags">
            <span class="tag">Electrónica</span>
            <span class="tag">Sistemas Digitales</span>
            <span class="tag">Programación Básica</span>
          </div>
        </div>
      </div>
      
      <!-- Universidad (Segundo punto - derecha) -->
      <div class="education-card right" data-year="2023">
        <div class="education-icon-container">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 640 512" class="education-icon">
            <path fill="currentColor" d="M320 32c-8.1 0-16.1 1.4-23.7 4.1L15.8 137.4C6.3 140.9 0 149.9 0 160s6.3 19.1 15.8 22.6l57.9 20.9C57.3 229.3 48 259.8 48 291.9v28.1c0 28.4-10.8 57.7-22.3 80.8c-6.5 13-13.9 25.8-22.5 37.6C0 442.7-.9 448.3 .9 453.4s6 8.9 11.2 10.2l64 16c4.2 1.1 8.7 .3 12.4-2s6.3-6.1 7.1-10.4c8.6-42.8 4.3-81.2-2.1-108.7C90.3 344.3 86 329.8 80 316.5v-2.9c0-30.9 25.1-56 56-56s56 25.1 56 56v2.9c-6 13.3-10.3 27.8-13.5 42C172.7 384.8 168.4 423.2 177 466c.8 4.3 3.4 8.1 7.1 10.4s8.2 3.1 12.4 2l64-16c5.2-1.3 9.3-5.1 11.2-10.2s.9-10.7-2.3-15.1c-8.7-11.8-16-24.6-22.5-37.6c-11.5-23-22.3-52.3-22.3-80.8v-28.1c0-32.1-9.3-62.6-25.7-88.4l185.9-67.2c7.5-2.7 15.6-2.7 23.1 0l287.3 103.8c10.7 3.9 17.9 14.3 17.9 25.8c0 13.1-8.1 24.9-20.3 29.7L312 404.3v-40.8l68.8-24.9c2.5-.9 4-3.4 3.4-6.1s-3-4.5-5.7-4.2L256 348.4v73.8c0 1.3 .4 2.6 1 3.8l64 103.1c2.5 4 7.9 5.3 11.9 2.8s5.3-7.9 2.8-11.9L272 416.5v-.3l8.6-3.1L460.4 315c10.9-3.9 17.6-14.4 17.6-25.8s-6.7-21.8-17.6-25.8L287.5 166.3c-1.2-.4-2.5-.4-3.7 0L203.8 192c-1.2 .4-2.5 .4-3.7 0L128.6 176H320h132.8c23.4 0 43.4 16.8 47.5 40c4.4 24.7 22.1 39.8 38.8 45.8c4.9 1.8 10.4 .8 14.1-2.5s5.2-8.5 3.9-13.6C542.8 198.4 510.3 160 464 160h-5.5L320 120l-7.9-28.5c-4.7-16.8-24.1-23.3-37.8-14L5.9 193.9c-14.7 9.8-17 30.7-4.5 43.7l50.3 52.8 47.5-17.2-47.5-17.2L46 250.3c-4.2-4.4-5-11.1-2.1-16.4c2.5-4.5 7.3-7.2 12.5-7.2c1.8 0 3.5 .3 5.2 1l72.9 26.4c.2 0 .3 .1 .5 .1l134.3 48.5c.2 0 .3 .1 .5 .1c0 0 .1 0 .1 0l.9 .3c1 .4 2.1 .5 3.1 .5c1.1 0 2.1-.2 3.1-.5l135.9-49.1c.2 0 .3-.1 .5-.1c0 0 .1 0 .1 0l72.9-26.4c1.7-.6 3.4-1 5.2-1c5.1 0 9.9 2.7 12.5 7.2c2.9 5.3 2.1 12-2.1 16.4l-5.6 5.9L320 234.5l-7.9-28.5c-4.7-16.8-24.1-23.3-37.8-14z"/>
          </svg>
        </div>
        <div class="education-content">
          <span class="date">2023 - Presente</span>
          <h4 class="title">Ingeniería en Sistemas Computacionales</h4>
          <p class="institution">Universidad Autónoma de Tamaulipas (UAT)</p>
          <p class="description">
            Actualmente cursando. Formación en programación, 
            desarrollo de software, bases de datos, redes y sistemas computacionales.
          </p>
          <div class="tags">
            <span class="tag">Java</span>
            <span class="tag">Python</span>
            <span class="tag">C++</span>
            <span class="tag">PHP</span>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<style>
  /* Línea de tiempo horizontal para educación */
  .education-section {
    margin-top: 5rem;
  }
  
  .education-timeline {
    position: relative;
    margin: 3rem 0;
    padding-top: 1rem;
  }
  
  .timeline-road {
    position: relative;
    height: 100px;
    margin-bottom: 50px;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  .timeline-track {
    position: absolute;
    top: 50%;
    left: 0;
    width: 100%;
    height: 6px;
    background: linear-gradient(to right, var(--accent-color), var(--primary-color));
    border-radius: 6px;
    box-shadow: 0 0 10px rgba(106, 90, 205, 0.3);
    transform: translateY(-50%);
  }
  
  .timeline-milestones {
    position: relative;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
  
  .milestone {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    min-width: 60px;
    height: 80px;
  }
  
  .milestone-dot {
    width: 30px;
    height: 30px;
    border-radius: 50%;
    background: linear-gradient(145deg, var(--primary-color), var(--accent-color));
    position: relative;
    box-shadow: 0 0 15px rgba(106, 90, 205, 0.5);
    cursor: pointer;
    transition: all 0.3s cubic-bezier(0.68, -0.55, 0.27, 1.55);
    z-index: 5;
    display: flex;
    align-items: center;
    justify-content: center;
    border: 3px solid rgba(255, 255, 255, 0.4);
  }
  
  .milestone-dot:hover {
    transform: scale(1.3);
    box-shadow: 0 0 25px rgba(106, 90, 205, 1);
    border-color: rgba(255, 255, 255, 0.8);
  }
  
  .milestone-dot.active {
    background: linear-gradient(145deg, var(--accent-color), var(--primary-color));
    transform: scale(1.2);
    box-shadow: 0 0 30px rgba(106, 90, 205, 1);
    border: 3px solid white;
  }
  
  .milestone-dot.pulse {
    animation: pulseEffect 0.8s cubic-bezier(0.68, -0.55, 0.27, 1.55);
  }
  
  @keyframes pulseEffect {
    0% {
      box-shadow: 0 0 0 0 rgba(106, 90, 205, 0.7);
    }
    70% {
      box-shadow: 0 0 0 15px rgba(106, 90, 205, 0);
    }
    100% {
      box-shadow: 0 0 0 0 rgba(106, 90, 205, 0);
    }
  }
  
  .milestone-dot::before {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 12px;
    height: 12px;
    background-color: white;
    border-radius: 50%;
    transition: all 0.3s ease;
  }
  
  .milestone-dot:hover::before {
    width: 14px;
    height: 14px;
  }
  
  .milestone-dot.active::before {
    width: 14px;
    height: 14px;
    background-color: #ffffff;
  }
  
  .milestone-year {
    position: absolute;
    top: 45px;
    font-size: 0.85rem;
    font-weight: 600;
    color: var(--text-color);
    transition: all 0.3s ease;
    background-color: rgba(18, 18, 18, 0.8);
    padding: 4px 8px;
    border-radius: 12px;
    opacity: 1;
    transform: translateY(0);
    pointer-events: none;
    white-space: nowrap;
    text-align: center;
    left: 50%;
    transform: translateX(-50%);
  }
  
  .milestone:hover .milestone-year {
    opacity: 1;
    background-color: rgba(18, 18, 18, 0.9);
    color: white;
  }
  
  .milestone-1 {
    left: 30%;
    transform: translate(-50%, -50%);
    z-index: 10;
  }
  
  .milestone-2 {
    left: 70%;
    transform: translate(-50%, -50%);
    z-index: 10;
  }
  
  .education-cards {
    position: relative;
    min-height: 350px;
    margin-top: 50px;
  }
  
  /* Contenedor especial para mantener espacio consistente */
  .mobile-view.education-cards {
    height: 400px; /* Altura fija para evitar saltos */
  }
  
  .education-cards.desktop-view {
    position: relative;
    min-height: 350px;
    display: block;
  }
  
  .education-cards.mobile-view {
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .education-card {
    position: absolute;
    display: flex;
    gap: 2rem;
    background: linear-gradient(145deg, rgba(74, 59, 145, 0.1), rgba(106, 90, 205, 0.1));
    border-radius: 12px;
    padding: 2rem;
    border: 1px solid rgba(106, 90, 205, 0.2);
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
    width: 70%;
    max-width: 700px;
    margin: 0 auto;
    transition: opacity 0.4s ease, visibility 0.4s ease;
    opacity: 0;
    visibility: hidden;
    pointer-events: none;
    box-sizing: border-box;
  }
  
  /* Estilos específicos para desktop */
  .desktop-view .education-card {
    position: absolute;
  }
  
  /* Estilos específicos para móvil */
  .mobile-view .education-card {
    position: relative;
    transform: none !important;
    padding: 1.5rem;
    width: 90%;
    max-width: 300px;
  }
  
  .education-card.active {
    opacity: 1;
    visibility: visible;
    z-index: 2;
    pointer-events: auto;
  }
  
  /* Animación para desktop */
  .desktop-view .education-card.active {
    animation: fadeInCard 0.6s cubic-bezier(0.68, -0.55, 0.27, 1.55) forwards;
  }
  
  /* Animación para móvil */
  .mobile-view .education-card.active {
    animation: fadeInMobileCard 0.4s ease forwards;
  }
  
  @keyframes fadeInCard {
    0% {
      opacity: 0;
      transform: translateY(20px) scale(0.95);
    }
    100% {
      opacity: 1;
      transform: translateY(0) scale(1);
    }
  }
  
  @keyframes fadeInMobileCard {
    0% {
      opacity: 0;
    }
    100% {
      opacity: 1;
    }
  }
  
  /* Posicionamiento en desktop */
  .desktop-view .education-card.left {
    left: 0;
    width: 70%;
  }
  
  .desktop-view .education-card.right {
    right: 0;
    width: 70%;
  }
  
  /* Posicionamiento en móvil - centrado */
  .mobile-view .education-card.left,
  .mobile-view .education-card.right {
    left: 50% !important;
    transform: translateX(-50%) !important;
    right: auto !important;
    margin: 0 auto !important;
    position: absolute !important; /* Cambiado de relative a absolute */
    top: 0 !important; /* Forzar la misma posición vertical */
  }
  
  /* Contenedor para mantener espacio consistente */
  .mobile-view .education-cards {
    position: relative;
    height: 350px; /* Altura fija para contener las tarjetas */
  }
  
  .education-icon-container {
    flex-shrink: 0;
    width: 80px;
    height: 80px;
    background: linear-gradient(145deg, rgba(74, 59, 145, 0.3), rgba(106, 90, 205, 0.3));
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    border: 2px solid rgba(106, 90, 205, 0.3);
  }
  
  .education-icon {
    width: 50%;
    height: 50%;
    color: var(--text-color);
  }
  
  .education-content {
    flex: 1;
  }
  
  /* Mejorar apariencia en móviles */
  .mobile-view .education-content {
    text-align: center;
  }
  
  .mobile-view .education-icon-container {
    margin-bottom: 1rem;
  }
  
  .mobile-view .tags {
    justify-content: center;
  }
  
  .education-content .title {
    font-size: 1.4rem;
    margin-bottom: 0.5rem;
  }
  
  .education-content .institution {
    color: var(--accent-color);
    font-weight: 500;
    margin-bottom: 1rem;
  }
  
  .education-content .description {
    margin-bottom: 1.5rem;
  }

  /* Animaciones para la sección de educación */
  @keyframes glowingDot {
    0% {
      box-shadow: 0 0 5px rgba(106, 90, 205, 0.5);
    }
    50% {
      box-shadow: 0 0 20px rgba(106, 90, 205, 0.8);
    }
    100% {
      box-shadow: 0 0 5px rgba(106, 90, 205, 0.5);
    }
  }
  
  @keyframes pulse {
    0% {
      transform: scale(1);
    }
    50% {
      transform: scale(1.1);
    }
    100% {
      transform: scale(1);
    }
  }
  
  .milestone-dot {
    animation: glowingDot 3s infinite, pulse 2s infinite;
  }
  
  .milestone-dot.active {
    animation: glowingDot 1.5s infinite;
  }
  
  .milestone:nth-child(2) .milestone-dot {
    animation-delay: 1.5s;
  }
  
  @keyframes roadAnimation {
    0% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
    100% {
      background-position: 0% 50%;
    }
  }
  
  .timeline-track {
    background-size: 200% 200%;
    animation: roadAnimation 6s linear infinite;
  }
  
  .date {
    display: inline-block;
    padding: 0.3rem 1rem;
    background-color: var(--primary-color);
    color: white;
    border-radius: 20px;
    font-size: 0.9rem;
    margin-bottom: 0.8rem;
  }
  
  .title {
    font-size: 1.3rem;
    margin-bottom: 0.8rem;
    color: var(--text-color);
    line-height: 1.4;
  }
  
  .description {
    color: rgba(248, 248, 255, 0.8);
    margin-bottom: 1rem;
    font-size: 0.95rem;
    line-height: 1.6;
  }
  
  .institution {
    color: var(--accent-color);
    font-weight: 500;
    margin-bottom: 0.8rem;
    font-size: 1rem;
  }
  
  .tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }
  
  .tag {
    padding: 0.3rem 1rem;
    background-color: rgba(106, 90, 205, 0.2);
    border-radius: 20px;
    font-size: 0.8rem;
    color: var(--text-color);
  }
  
  /* Media queries para dispositivos móviles */
  @media (max-width: 992px) {
    .education-card {
      width: 90%;
      flex-direction: column;
      align-items: center;
      text-align: center;
      padding: 1.5rem;
    }
    
    .education-icon-container {
      margin-bottom: 1.5rem;
    }
    
    .education-content .tags {
      justify-content: center;
    }
  }
  
  @media (max-width: 768px) {
    .milestone-1 {
      left: 25%;
    }
    
    .milestone-2 {
      left: 75%;
    }
    
    .education-section {
      margin-top: 4rem;
      padding: 0 1rem;
    }
    
    .education-cards {
      position: relative;
      min-height: 450px;
      width: 100%;
      box-sizing: border-box;
      overflow: visible;
      display: flex;
      flex-direction: column;
      align-items: center;
    }
    
    .education-card.left, .education-card.right {
      position: relative;
      left: 0;
      transform: none;
      width: 100%;
      max-width: 100%;
      margin: 0 auto;
      flex-direction: column;
      align-items: center;
      text-align: center;
      padding: 1rem;
      box-sizing: border-box;
      opacity: 0;
      visibility: hidden;
      display: none;
    }
    
    .education-card.active {
      opacity: 1;
      visibility: visible;
      display: flex;
      position: relative !important;
      top: 0;
      left: 50% !important;
      right: auto !important;
      width: 90%;
      max-width: 300px;
      transform: translateX(-50%) !important;
      margin: 0 auto;
    }
    
    .education-content .title {
      font-size: 1.3rem;
    }
    
    .education-icon-container {
      margin-bottom: 1.5rem;
    }
    
    .education-content .tags {
      justify-content: center;
    }
  }
  
  @media (max-width: 480px) {
    .timeline-road {
      height: 80px;
      margin-bottom: 60px;
    }
    
    .milestone-dot {
      width: 20px;
      height: 20px;
    }
    
    .milestone-dot::before {
      width: 8px;
      height: 8px;
    }
    
    .milestone-year {
      font-size: 0.75rem;
      padding: 3px 6px;
      top: 35px;
      white-space: nowrap;
    }
    
    .education-card.left, .education-card.right {
      width: 90%;
      max-width: 320px;
      padding: 1.2rem;
    }
    
    .education-cards {
      min-height: 480px;
    }
    
    .education-icon-container {
      width: 50px;
      height: 50px;
    }
    
    .education-content .title {
      font-size: 1.1rem;
    }
    
    .education-content .description {
      font-size: 0.85rem;
    }
    
    .education-content .tag {
      font-size: 0.7rem;
      padding: 0.2rem 0.6rem;
      margin: 0.2rem;
    }
    
    /* Asegurar que las tarjetas estén centradas */
    .education-cards.mobile-view {
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
    }
    
    /* Mejorar la visibilidad de las tarjetas activas */
    .education-card.active {
      box-shadow: 0 10px 30px rgba(106, 90, 205, 0.3);
    }
  }
  
  /* Estilos específicos para dispositivos muy pequeños */
  @media (max-width: 360px) {
    .education-card.left, .education-card.right {
      width: 85%; /* Reducido para asegurar que quepa en la pantalla */
      max-width: 260px;
      padding: 0.8rem;
      margin: 0 auto !important;
      position: absolute !important; /* Cambiado de relative a absolute */
      left: 50% !important; /* Centrar horizontalmente */
      right: auto !important;
      transform: translateX(-50%) !important; /* Asegurar centrado horizontal */
      opacity: 0; /* Ocultar inicialmente */
      visibility: hidden; /* Ocultar inicialmente */
      top: 0 !important; /* Fijar posición vertical */
    }
    
    .education-section {
      padding: 0;
      margin-top: 0;
    }
    
    .education-cards {
      min-height: 420px; /* Reducir altura mínima */
      display: flex;
      flex-direction: column;
      align-items: center;
      width: 100%;
      padding: 0 5px; /* Reducir padding horizontal */
      position: relative; /* Asegurar posicionamiento correcto */
    }
    
    .education-card.active {
      z-index: 5;
      left: 50% !important;
      transform: translateX(-50%) !important;
      opacity: 1 !important; /* Mostrar cuando está activa */
      visibility: visible !important; /* Mostrar cuando está activa */
    }
    
    /* Mejorar espaciado y visualización en pantallas pequeñas */
    .timeline-road {
      height: 80px; /* Reducir altura */
      margin-bottom: 30px; /* Reducir margen */
    }
    
    .milestone-dot {
      width: 24px; /* Reducir tamaño */
      height: 24px; /* Reducir tamaño */
    }
    
    .milestone-year {
      font-size: 0.7rem;
      padding: 3px 6px;
      top: 35px; /* Ajustar posición */
    }
    
    .section-category {
      font-size: 1.4rem; /* Reducir tamaño */
      margin: 1.5rem 0 1rem 0; /* Reducir margen */
    }
    
    .education-icon-container {
      width: 45px;
      height: 45px;
      margin-bottom: 1rem;
    }
    
    .education-content .title {
      font-size: 1rem;
    }
    
    .education-content .description {
      font-size: 0.8rem;
      line-height: 1.4;
    }
    
    .milestone-year {
      font-size: 0.7rem;
    }
    
    .tags {
      flex-wrap: wrap;
      gap: 0.3rem;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    // Manejo de la línea de tiempo de educación
    const milestones = Array.from(document.querySelectorAll('.milestone-dot'));
    const educationCards = Array.from(document.querySelectorAll('.education-card'));
    
    // Función para mostrar una tarjeta específica
    const showCard = (cardIndex) => {
      // Ocultar todas las tarjetas primero
      educationCards.forEach(card => {
        card.classList.remove('active');
        card.style.opacity = '0';
        card.style.visibility = 'hidden';
      });
      
      // Mostrar la tarjeta seleccionada
      if (educationCards[cardIndex]) {
        const activeCard = educationCards[cardIndex];
        activeCard.classList.add('active');
        activeCard.style.opacity = '1';
        activeCard.style.visibility = 'visible';
        
        // Ajustes específicos para móvil o desktop
        const isMobile = window.innerWidth <= 768;
        if (isMobile) {
          // Configuración para móvil - asegurándonos que esté centrado
          activeCard.style.display = 'flex';
          activeCard.style.position = 'absolute'; // Cambiado de relative a absolute
          activeCard.style.width = '90%';
          activeCard.style.maxWidth = '300px';
          activeCard.style.left = '50%';
          activeCard.style.right = 'auto';
          activeCard.style.transform = 'translateX(-50%)';
          activeCard.style.margin = '0 auto';
          activeCard.style.top = '0'; // Forzar la misma posición vertical
          // Forzar centrado con doble verificación
          setTimeout(() => {
            activeCard.style.left = '50%';
            activeCard.style.transform = 'translateX(-50%)';
            // Asegurar que la tarjeta está visible
            activeCard.style.opacity = '1';
            activeCard.style.visibility = 'visible';
            activeCard.style.zIndex = '10';
          }, 50);
        } else {
          // Configuración para desktop
          activeCard.style.display = 'flex';
          activeCard.style.position = 'absolute';
          activeCard.style.width = '70%';
          activeCard.style.maxWidth = '700px';
          
          // Posicionamiento izquierda/derecha según la clase
          if (activeCard.classList.contains('left')) {
            activeCard.style.left = '0';
            activeCard.style.right = 'auto';
            activeCard.style.transform = 'none';
          } else {
            activeCard.style.right = '0';
            activeCard.style.left = 'auto';
            activeCard.style.transform = 'none';
          }
        }
      }
      
      // Actualizar el estado activo de los milestone-dots
      milestones.forEach((dot, i) => {
        if (i === cardIndex) {
          dot.classList.add('active');
        } else {
          dot.classList.remove('active');
        }
      });
    };
    
    // Añadir eventos de clic a los puntos de la línea de tiempo
    milestones.forEach((milestone, index) => {
      milestone.addEventListener('click', function() {
        // Guardar la posición actual de la tarjeta activa para referencia
        const currentActiveCard = document.querySelector('.education-card.active');
        const currentTop = currentActiveCard ? currentActiveCard.getBoundingClientRect().top : 0;
        
        showCard(index);
        
        // Si estamos en móvil, asegurar que la nueva tarjeta mantenga la misma posición visual
        if (window.innerWidth <= 768) {
          const newActiveCard = document.querySelector('.education-card.active');
          if (newActiveCard) {
            newActiveCard.style.position = 'absolute';
            newActiveCard.style.top = '0';
            newActiveCard.style.left = '50%';
            newActiveCard.style.transform = 'translateX(-50%)';
          }
        }
        
        // Efecto visual mejorado al hacer clic
        this.classList.add('pulse');
        this.style.transform = 'scale(0.85)';
        
        setTimeout(() => {
          this.style.transform = 'scale(1.15)';
          
          setTimeout(() => {
            this.style.transform = 'scale(1)';
            setTimeout(() => {
              this.classList.remove('pulse');
            }, 300);
          }, 150);
        }, 150);
      });
    });
    
    // Mostrar la primera tarjeta (preparatoria) por defecto
    setTimeout(() => {
      showCard(0);
      // Añadir clase active al primer milestone
      if (milestones[0]) {
        milestones[0].classList.add('active');
      }
    }, 300);
    
    // Animación al hacer scroll para la línea de tiempo
    const animateTimelineOnScroll = () => {
      const timelineSection = document.querySelector('.education-timeline');
      if (!timelineSection) return;
      
      const sectionTop = timelineSection.getBoundingClientRect().top;
      const windowHeight = window.innerHeight;
      
      if (sectionTop < windowHeight * 0.75) {
        milestones.forEach((milestone, index) => {
          setTimeout(() => {
            milestone.style.animation = 'glowingDot 3s infinite';
            if (index === 1) {
              milestone.style.animationDelay = '1.5s';
            }
          }, 300 * index);
        });
      }
    };
    
    // Ejecutar animación al cargar y al hacer scroll
    animateTimelineOnScroll();
    window.addEventListener('scroll', animateTimelineOnScroll);
    
    // Mejorar el desplazamiento en dispositivos móviles
    let currentIndex = 0;
    
    // Función para aplicar los estilos adecuados según el tamaño de la pantalla
    const adjustForScreenSize = () => {
      const isMobile = window.innerWidth <= 768;
      const isVerySmall = window.innerWidth <= 360;
      
      // Establecemos la clase CSS para el contenedor principal
      const cardsContainer = document.querySelector('.education-cards');
      if (cardsContainer) {
        if (isMobile) {
          cardsContainer.classList.add('mobile-view');
          cardsContainer.classList.remove('desktop-view');
          
          // Asegurar que las tarjetas activas estén centradas en móvil
          document.querySelectorAll('.education-card.active').forEach(card => {
            card.style.position = 'absolute'; // Cambiado de relative a absolute
            card.style.left = '50%';
            card.style.right = 'auto';
            card.style.transform = 'translateX(-50%)';
            card.style.margin = '0 auto';
            card.style.width = isVerySmall ? '85%' : '90%';
            card.style.maxWidth = isVerySmall ? '260px' : '300px';
            card.style.zIndex = '10';
            card.style.top = '0'; // Fijar la posición vertical
            
            // Asegurar visibilidad
            card.style.opacity = '1';
            card.style.visibility = 'visible';
          });
          
          // Ocultar las tarjetas no activas
          document.querySelectorAll('.education-card:not(.active)').forEach(card => {
            card.style.opacity = '0';
            card.style.visibility = 'hidden';
          });
        } else {
          cardsContainer.classList.add('desktop-view');
          cardsContainer.classList.remove('mobile-view');
        }
      }
      
      // Re-aplicar el active a la tarjeta actual para ajustar los estilos
      if (educationCards[currentIndex]) {
        showCard(currentIndex);
        
        // Doble verificación para móviles
        if (isMobile && educationCards[currentIndex]) {
          setTimeout(() => {
            const activeCard = educationCards[currentIndex];
            if (activeCard.classList.contains('active')) {
              activeCard.style.left = '50%';
              activeCard.style.transform = 'translateX(-50%)';
            }
          }, 100);
        }
      }
      
      // Configurar swipe para móvil si estamos en un dispositivo móvil
      if (isMobile) {
        // Configurar swipe para móvil
        let touchStartX = 0;
        let touchEndX = 0;
        
        const timelineElement = document.querySelector('.education-timeline');
        if (timelineElement) {
          const handleSwipe = () => {
            // Determinar la dirección del swipe
            const diff = touchStartX - touchEndX;
            
            // Si el swipe es significativo (más de 30px para hacerlo más sensible)
            if (Math.abs(diff) > 30) {
              // Swipe izquierda (siguiente)
              if (diff > 0 && currentIndex < educationCards.length - 1) {
                currentIndex++;
                showCard(currentIndex);
                
                // Feedback visual
                if (milestones[currentIndex]) {
                  milestones[currentIndex].classList.add('pulse');
                  setTimeout(() => milestones[currentIndex].classList.remove('pulse'), 500);
                }
              }
              // Swipe derecha (anterior)
              else if (diff < 0 && currentIndex > 0) {
                currentIndex--;
                showCard(currentIndex);
                
                // Feedback visual
                if (milestones[currentIndex]) {
                  milestones[currentIndex].classList.add('pulse');
                  setTimeout(() => milestones[currentIndex].classList.remove('pulse'), 500);
                }
              }
            }
          };
          
          // Limpiamos los event listeners anteriores (si existen)
          timelineElement.removeEventListener('touchstart', onTouchStart);
          timelineElement.removeEventListener('touchend', onTouchEnd);
          
          // Definimos las funciones para los event listeners
          function onTouchStart(e) {
            touchStartX = e.changedTouches[0].screenX;
          }
          
          function onTouchEnd(e) {
            touchEndX = e.changedTouches[0].screenX;
            handleSwipe();
          }
          
          // Agregamos los nuevos event listeners
          timelineElement.addEventListener('touchstart', onTouchStart);
          timelineElement.addEventListener('touchend', onTouchEnd);
        }
      } else {
        // Restaurar posición en desktop
        educationCards.forEach(card => {
          if (card.classList.contains('left')) {
            card.style.left = '0';
            card.style.right = 'auto';
          } else {
            card.style.right = '0';
            card.style.left = 'auto';
          }
        });
        
        // Re-aplicar el active a la tarjeta actual
        if (educationCards[currentIndex]) {
          showCard(currentIndex);
        }
      }
    };
    
    // Aplicar ajustes iniciales
    adjustForScreenSize();
    
    // Asegurar que las tarjetas se muestren correctamente al cargar
    setTimeout(() => {
      const isMobile = window.innerWidth <= 768;
      const isVerySmall = window.innerWidth <= 360;
      
      if (isMobile) {
        // Forzar centrado en móviles
        const activeCard = educationCards[currentIndex];
        if (activeCard) {
          activeCard.style.position = 'absolute'; // Cambiado de relative a absolute
          activeCard.style.left = '50%';
          activeCard.style.right = 'auto';
          activeCard.style.transform = 'translateX(-50%)';
          activeCard.style.margin = '0 auto';
          activeCard.style.width = isVerySmall ? '85%' : '90%';
          activeCard.style.maxWidth = isVerySmall ? '260px' : '300px';
          activeCard.style.zIndex = '10';
          activeCard.style.top = '0'; // Fijar posición vertical
          
          // Asegurar visibilidad
          activeCard.style.opacity = '1';
          activeCard.style.visibility = 'visible';
          
          // Comprobar después de un pequeño retraso para asegurar que los estilos se aplican
          setTimeout(() => {
            if (activeCard.style.opacity !== '1' || activeCard.style.visibility !== 'visible') {
              activeCard.style.opacity = '1';
              activeCard.style.visibility = 'visible';
            }
          }, 300);
        }
      }
    }, 300);
    
    // Escuchar cambios en el tamaño de la ventana
    window.addEventListener('resize', adjustForScreenSize);
  });
</script>
